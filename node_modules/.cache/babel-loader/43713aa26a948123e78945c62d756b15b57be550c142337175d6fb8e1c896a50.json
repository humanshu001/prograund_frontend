{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProGraund\\\\ProGraund_main\\\\prograund\\\\src\\\\components\\\\sub-components\\\\dashboard-components\\\\DebugStress.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PostItem from './Post Item/PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DebugStress() {\n  _s();\n  const url = 'http://127.0.0.1:8000/posts/';\n  const [posts, setPosts] = useState([]);\n  const getData = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const maindata = data.filter(item => item.type === \"Funny\");\n    setPosts(maindata);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), posts.map(item => item.type === \"Funny\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PostItem, {\n        title: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 58\n      }, this)\n    }, item.post_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 34\n    }, this) : null)]\n  }, void 0, true);\n}\n_s(DebugStress, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = DebugStress;\nvar _c;\n$RefreshReg$(_c, \"DebugStress\");","map":{"version":3,"names":["React","useState","useEffect","PostItem","jsxDEV","_jsxDEV","Fragment","_Fragment","DebugStress","_s","url","posts","setPosts","getData","response","fetch","data","json","maindata","filter","item","type","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","title","post_id","_c","$RefreshReg$"],"sources":["C:/ProGraund/ProGraund_main/prograund/src/components/sub-components/dashboard-components/DebugStress.js"],"sourcesContent":["import React, {useState,useEffect} from 'react'\r\nimport PostItem from './Post Item/PostItem'\r\n\r\nexport default function DebugStress() {\r\n  const url = 'http://127.0.0.1:8000/posts/';\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const getData = async () => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    const maindata = data.filter((item) => item.type === \"Funny\")\r\n    setPosts(maindata);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"spinner\"></div>\r\n      {posts.map((item) => (\r\n        (item.type === \"Funny\")? <div key={item.post_id}><PostItem title={item.title}/></div>: null\r\n      ))}  \r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC/C,OAAOC,QAAQ,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAMC,GAAG,GAAG,8BAA8B;EAE1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,CAAC;IACjC,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,MAAMC,QAAQ,GAAGF,IAAI,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC;IAC7DT,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdW,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EACN,oBACER,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAKkB,SAAS,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC9BhB,KAAK,CAACiB,GAAG,CAAER,IAAI,IACbA,IAAI,CAACC,IAAI,KAAK,OAAO,gBAAGhB,OAAA;MAAAiB,QAAA,eAAwBjB,OAAA,CAACF,QAAQ;QAAC0B,KAAK,EAAET,IAAI,CAACS;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC,GAA5CP,IAAI,CAACU,OAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqC,CAAC,GAAE,IACxF,CAAC;EAAA,eACF,CAAC;AAEP;AAAClB,EAAA,CAxBuBD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}