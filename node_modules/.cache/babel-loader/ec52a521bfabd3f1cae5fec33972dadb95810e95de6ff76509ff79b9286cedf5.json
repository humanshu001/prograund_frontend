{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProGraund\\\\ProGraund_main\\\\prograund\\\\src\\\\components\\\\sub-components\\\\dashboard-components\\\\InspectWorld.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostItem from './Post Item/PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InspectWorld() {\n  _s();\n  const url = 'http://127.0.0.1:8000/posts/';\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const getData = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const maindata = data.filter(item => item.type === \"Professional\");\n    setPosts(maindata);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-info m-auto\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: posts.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PostItem, {\n          title: item.title,\n          image_link: file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 37\n        }, this)\n      }, item.post_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false)\n  }, void 0, false);\n}\n_s(InspectWorld, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = InspectWorld;\nvar _c;\n$RefreshReg$(_c, \"InspectWorld\");","map":{"version":3,"names":["React","useEffect","useState","PostItem","jsxDEV","_jsxDEV","Fragment","_Fragment","InspectWorld","_s","url","posts","setPosts","loading","setLoading","getData","response","fetch","data","json","maindata","filter","item","type","children","className","role","fileName","_jsxFileName","lineNumber","columnNumber","map","title","image_link","file","post_id","_c","$RefreshReg$"],"sources":["C:/ProGraund/ProGraund_main/prograund/src/components/sub-components/dashboard-components/InspectWorld.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PostItem from './Post Item/PostItem';\r\n\r\nexport default function InspectWorld() {\r\n  const url = 'http://127.0.0.1:8000/posts/';\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getData = async () => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    const maindata = data.filter((item) => item.type === \"Professional\")\r\n    setPosts(maindata);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n          <div className=\"col-md-12 d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-info m-auto\" role=\"status\">\r\n              <span className=\"visually-hidden\"></span>\r\n            </div>\r\n          </div>\r\n      ) : (\r\n        <>\r\n          {posts.map((item) => (\r\n            <div key={item.post_id}><PostItem title={item.title} image_link={file} /></div>\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,GAAG,GAAG,8BAA8B;EAE1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMa,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,CAAC;IACjC,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,MAAMC,QAAQ,GAAGF,IAAI,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,cAAc,CAAC;IACpEX,QAAQ,CAACQ,QAAQ,CAAC;IAClBN,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdc,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAAAE,SAAA;IAAAiB,QAAA,EACGX,OAAO,gBACJR,OAAA;MAAKoB,SAAS,EAAC,yCAAyC;MAAAD,QAAA,eACtDnB,OAAA;QAAKoB,SAAS,EAAC,iCAAiC;QAACC,IAAI,EAAC,QAAQ;QAAAF,QAAA,eAC5DnB,OAAA;UAAMoB,SAAS,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAERzB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,EACGb,KAAK,CAACoB,GAAG,CAAET,IAAI,iBACdjB,OAAA;QAAAmB,QAAA,eAAwBnB,OAAA,CAACF,QAAQ;UAAC6B,KAAK,EAAEV,IAAI,CAACU,KAAM;UAACC,UAAU,EAAEC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAA/DR,IAAI,CAACa,OAAO;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwD,CAC/E;IAAC,gBACF;EACH,gBACD,CAAC;AAEP;AAACrB,EAAA,CApCuBD,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}