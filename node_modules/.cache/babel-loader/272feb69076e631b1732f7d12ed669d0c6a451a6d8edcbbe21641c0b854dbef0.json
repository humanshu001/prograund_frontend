{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nexport default function Host() {\n  _s();\n  const url = 'http://127.0.0.1:8000/posts/';\n  const fileUrl = 'http://127.0.0.1:8000/posts/savefile';\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const onSubmitForm = async () => {\n    const title = document.querySelector('textarea[name=\"title\"]').value;\n    const type = document.querySelector('select[name=\"type\"]').value;\n    const file = document.querySelector('input[name=\"file\"]').files[0];\n    submitForm(title, type, file);\n  };\n  const submitForm = async (title, type, file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('type', type);\n    try {\n      await fetch(`${url}${Math.random()}`, {\n        method: 'POST',\n        body: formData\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /*{ async function submitForm(title, type, file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n      try {\r\n      const fileResponse = await fetch(fileUrl, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n        if (fileResponse.ok) {\r\n        const { filename } = await fileResponse.json();\r\n        setFileName(filename);\r\n          try {\r\n          const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              user_id:1,\r\n              title,\r\n              type,\r\n              file:fileName,\r\n              likes_count:0,\r\n              share_count:0\r\n            }),\r\n          });\r\n            if (response.ok) {\r\n            const data = await response.json();\r\n            if (data === 'Added Successfully') {\r\n              Swal.fire({\r\n                title: 'Post Added Successfully!',\r\n                color: 'var(--color-5)',\r\n                background: 'var(--color-2)',\r\n                icon: 'success',\r\n                confirmButtonColor: 'var(--color-5)',\r\n                confirmButtonText: 'Okay!',\r\n                iconColor: 'var(--color-5)',\r\n              }).then(() => {\r\n                window.location = '/dashboard';\r\n              });\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } */\n}\n_s(Host, \"oVNFPFk0fBJJOmSW4fnLhxWgu8A=\");\n_c = Host;\nvar _c;\n$RefreshReg$(_c, \"Host\");","map":{"version":3,"names":["React","useState","Swal","Host","_s","url","fileUrl","file","setFile","fileName","setFileName","handleFileChange","e","target","files","onSubmitForm","title","document","querySelector","value","type","submitForm","formData","FormData","append","fetch","Math","random","method","body","error","console","log","_c","$RefreshReg$"],"sources":["C:/ProGraund/ProGraund_main/prograund/src/components/sub-components/Host.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function Host() {\r\n  const url = 'http://127.0.0.1:8000/posts/';\r\n  const fileUrl = 'http://127.0.0.1:8000/posts/savefile';\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [fileName, setFileName] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\nconst onSubmitForm = async () => {\r\n  const title = document.querySelector('textarea[name=\"title\"]').value;\r\n  const type = document.querySelector('select[name=\"type\"]').value;\r\n  const file = document.querySelector('input[name=\"file\"]').files[0];\r\n  submitForm(title, type, file);\r\n};\r\n\r\nconst submitForm = async (title, type, file) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('title', title);\r\n  formData.append('type', type);\r\n  \r\n  try {\r\n    await fetch(`${url}${Math.random()}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n  /*{ async function submitForm(title, type, file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const fileResponse = await fetch(fileUrl, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (fileResponse.ok) {\r\n        const { filename } = await fileResponse.json();\r\n        setFileName(filename);\r\n\r\n        try {\r\n          const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              user_id:1,\r\n              title,\r\n              type,\r\n              file:fileName,\r\n              likes_count:0,\r\n              share_count:0\r\n            }),\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            if (data === 'Added Successfully') {\r\n              Swal.fire({\r\n                title: 'Post Added Successfully!',\r\n                color: 'var(--color-5)',\r\n                background: 'var(--color-2)',\r\n                icon: 'success',\r\n                confirmButtonColor: 'var(--color-5)',\r\n                confirmButtonText: 'Okay!',\r\n                iconColor: 'var(--color-5)',\r\n              }).then(() => {\r\n                window.location = '/dashboard';\r\n              });\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } */}\r\n\r\n  \r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,aAAa;AAE9B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,GAAG,GAAG,8BAA8B;EAC1C,MAAMC,OAAO,GAAG,sCAAsC;EAEtD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EACH,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,wBAAwB,CAAC,CAACC,KAAK;IACpE,MAAMC,IAAI,GAAGH,QAAQ,CAACC,aAAa,CAAC,qBAAqB,CAAC,CAACC,KAAK;IAChE,MAAMZ,IAAI,GAAGU,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC;IAClEO,UAAU,CAACL,KAAK,EAAEI,IAAI,EAAEb,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMc,UAAU,GAAG,MAAAA,CAAOL,KAAK,EAAEI,IAAI,EAAEb,IAAI,KAAK;IAC9C,MAAMe,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEjB,IAAI,CAAC;IAC7Be,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAER,KAAK,CAAC;IAC/BM,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMK,KAAK,CAAE,GAAEpB,GAAI,GAAEqB,IAAI,CAACC,MAAM,CAAC,CAAE,EAAC,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEP;MACR,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;;EAEC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIM;AAAC1B,EAAA,CAnFiBD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}