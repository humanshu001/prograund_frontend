{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProGraund\\\\ProGraund_main\\\\prograund\\\\src\\\\components\\\\sub-components\\\\dashboard-components\\\\DebugStress.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PostItem from './Post Item/PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DebugStress() {\n  _s();\n  const url = 'http://127.0.0.1:8000/posts/';\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const getData = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const maindata = data.filter(item => item.type === \"Funny\");\n    setPosts(maindata);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-info m-auto\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: posts.map(item => item.type === \"Funny\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PostItem, {\n          title: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 62\n        }, this)\n      }, item.post_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 38\n      }, this) : null)\n    }, void 0, false)\n  }, void 0, false);\n}\n_s(DebugStress, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = DebugStress;\nvar _c;\n$RefreshReg$(_c, \"DebugStress\");","map":{"version":3,"names":["React","useState","useEffect","PostItem","jsxDEV","_jsxDEV","Fragment","_Fragment","DebugStress","_s","url","posts","setPosts","loading","setLoading","getData","response","fetch","data","json","maindata","filter","item","type","children","className","role","fileName","_jsxFileName","lineNumber","columnNumber","map","title","post_id","_c","$RefreshReg$"],"sources":["C:/ProGraund/ProGraund_main/prograund/src/components/sub-components/dashboard-components/DebugStress.js"],"sourcesContent":["import React, {useState,useEffect} from 'react'\r\nimport PostItem from './Post Item/PostItem'\r\n\r\nexport default function DebugStress() {\r\n  const url = 'http://127.0.0.1:8000/posts/';\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getData = async () => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    const maindata = data.filter((item) => item.type === \"Funny\")\r\n    setPosts(maindata);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"col-md-12 d-flex justify-content-center\">\r\n        <div className=\"spinner-border text-info m-auto\" role=\"status\">\r\n          <span className=\"visually-hidden\"></span>\r\n        </div>\r\n      </div>\r\n      ) : (\r\n        <>\r\n          {posts.map((item) => (\r\n            (item.type === \"Funny\")? <div key={item.post_id}><PostItem title={item.title} /></div>: null\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC/C,OAAOC,QAAQ,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAMC,GAAG,GAAG,8BAA8B;EAE1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMc,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,CAAC;IACjC,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,MAAMC,QAAQ,GAAGF,IAAI,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC;IAC7DX,QAAQ,CAACQ,QAAQ,CAAC;IAClBN,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACda,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAAAE,SAAA;IAAAiB,QAAA,EACGX,OAAO,gBACNR,OAAA;MAAKoB,SAAS,EAAC,yCAAyC;MAAAD,QAAA,eACxDnB,OAAA;QAAKoB,SAAS,EAAC,iCAAiC;QAACC,IAAI,EAAC,QAAQ;QAAAF,QAAA,eAC5DnB,OAAA;UAAMoB,SAAS,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEJzB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,EACGb,KAAK,CAACoB,GAAG,CAAET,IAAI,IACbA,IAAI,CAACC,IAAI,KAAK,OAAO,gBAAGlB,OAAA;QAAAmB,QAAA,eAAwBnB,OAAA,CAACF,QAAQ;UAAC6B,KAAK,EAAEV,IAAI,CAACU;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAA7CR,IAAI,CAACW,OAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsC,CAAC,GAAE,IACzF;IAAC,gBACF;EACH,gBACD,CAAC;AAGP;AAACrB,EAAA,CArCuBD,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}